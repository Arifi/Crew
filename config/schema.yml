propel:
  _attributes:
    package: lib.model
    defaultIdMethod: native
  branch:
    _attributes:
    id:                               ~
    repository_id:                    { type: INTEGER, size: '11', required: true, foreignTable: repository, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    name:                             { type: VARCHAR, size: '255', required: true }
    commit_reference:                 { type: VARCHAR, size: '50', required: true }
    last_commit:                      { type: VARCHAR, size: '50', required: false }
    last_commit_desc:                 { type: VARCHAR, size: '255', required: false }
    is_blacklisted:                   { type: TINYINT, size: '1', required: true, defaultValue: '0' }
    review_request:                   { type: TINYINT, size: '1', required: true, defaultValue: '0' }
    status:                           { type: TINYINT, size: '1', required: true, defaultValue: '0' }
    commit_status_changed:            { type: VARCHAR, size: '50', required: false }
    user_status_changed:              { type: integer, foreignTable: sf_guard_user, foreignReference: id }
    date_status_changed:              { type: TIMESTAMP, required: false }
  branch_comment:
    _attributes:
    id:                               ~
    user_id:                          { type: integer, foreignTable: sf_guard_user, foreignReference: id }
    branch_id:                        { type: INTEGER, size: '11', required: true, foreignTable: branch, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    value:                            { type: LONGVARCHAR, required: true }
    created_at:                       { type: timestamp, required: true}
    updated_at:                       { type: timestamp, required: true}
    _indexes:                         { branch_comment_FI_1: [user_id], branch_comment_FI_2: [branch_id] }
  file:
    _attributes:
    id:                               ~
    branch_id:                        { type: INTEGER, size: '11', required: true, foreignTable: branch, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    state:                            { type: CHAR, size: '1', required: true }
    filename:                         { type: VARCHAR, size: '255', required: true }
    last_change_commit:               { type: VARCHAR, size: '50', required: false }
    status:                           { type: TINYINT, size: '1', required: true, defaultValue: '0' }
    commit_status_changed:            { type: VARCHAR, size: '50', required: false }
    user_status_changed:              { type: INTEGER, size: '11', required: false }
    date_status_changed:              { type: TIMESTAMP, required: false }
  file_comment:
    _attributes:
    id:                               ~
    user_id:                          { type: integer, foreignTable: sf_guard_user, foreignReference: id }
    file_id:                          { type: INTEGER, size: '11', required: true, foreignTable: file, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    value:                            { type: LONGVARCHAR, required: true }
    created_at:                       { type: timestamp, required: true}
    updated_at:                       { type: timestamp, required: true}
    _indexes:                         { file_comment_FI_1: [user_id], file_comment_FI_2: [file_id] }
  line_comment:
    _attributes:
    id:                               ~
    user_id:                          { type: integer, foreignTable: sf_guard_user, foreignReference: id }
    commit:                           { type: VARCHAR, size: '50', required: true }
    file_id:                          { type: INTEGER, size: '11', required: true, foreignTable: file, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    position:                         { type: INTEGER, size: '11', required: true }
    line:                             { type: INTEGER, size: '11', required: true }
    value:                            { type: LONGVARCHAR, required: true }
    created_at:                       { type: timestamp, required: true}
    updated_at:                       { type: timestamp, required: true}
    _indexes:                         { line_comment_FI_1: [user_id], line_comment_FI_2: [file_id] }
  profile:
    _attributes:
    id:                               ~
    nickname:                         { type: VARCHAR, size: '255' }
    email:                            { type: VARCHAR, size: '255' }
    sf_guard_user_id:                 { type: INTEGER, foreignTable: sf_guard_user, foreignReference: id, required: true, onDelete: cascade }
  repository:
    _attributes:
    id:                               ~
    name:                             { type: VARCHAR, size: '50', required: true }
    value:                            { type: VARCHAR, size: '255', required: true }
    remote:                           { type: VARCHAR, size: '255', required: true }
  status_action:
    _attributes:
    id:                               ~
    user_id:                          { type: INTEGER, foreignTable: sf_guard_user, foreignReference: id }
    repository_id:                    { type: INTEGER, size: '11', required: true, foreignTable: repository, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    branch_id:                        { type: INTEGER, size: '11', required: false, foreignTable: branch, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    file_id:                          { type: INTEGER, size: '11', required: false, foreignTable: file, foreignReference: id, onDelete: CASCADE, onUpdate: RESTRICT }
    message:                          { type: VARCHAR, size: '255', required: true }
    old_status:                       { type: INTEGER, size: '11', required: true }
    new_status:                       { type: INTEGER, size: '11', required: true }
    created_at:                       { type: timestamp, required: true}
  
